# Leetcode 3307: Find the K-th Character in String Game II
# https://leetcode.com/problems/find-the-k-th-character-in-string-game-ii/
# Solved on 4th of July, 2025
class Solution:
    def kthCharacter(self, k: int, operations: list[int]) -> str:
        """
        Calculates the k-th character of a string generated by a series of operations.

        The string starts with 'a'. Each operation doubles the current string and
        appends it to itself. If the operation is 1, the appended half is shifted
        cyclically by one character (a->b, b->c, ..., z->a).

        Args:
            k (int): The 1-indexed position of the character to find.
            operations (list[int]): A list of integers representing the operations.
                                    0 means no shift, 1 means shift.

        Returns:
            str: The k-th character of the final string.
        """
        n = len(operations)
        lengths = [1] * (n + 1)
        for i in range(1, (n + 1)):
            lengths[i] = lengths[i - 1] * 2

        # Work backwards from position (k - 1) in the final string
        pos = k - 1
        shift = 0

        # Traverse operations in reverse
        for i in range((n - 1), -1, -1):
            half = lengths[i]
            op = operations[i]

            if pos >= half:
                # We're in the appended half
                pos -= half
                if op == 1:
                    shift = (shift + 1) % 26

        return chr((ord('a') - ord('a') + shift) % 26 + ord('a'))